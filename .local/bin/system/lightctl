#!/bin/sh

#
# A simple script, that regulates the screenlight using light
#

INC=
DEC=
NOT=
BLO=
SAV=
REST=

while getopts i:d:nb:srh option
do
    case "${option}"
        in
        i) INC=${OPTARG};;
        d) DEC=${OPTARG};;
        n) NOT="TRUE";;
        b) BLO=${OPTARG};;
				s) SAV="TRUE";;
				r) REST="TRUE";;
        *) echo "A simple script, that regulates the screenlight using light.

USAGE:
-i <val>   Increase screenlight by val (in percent)
-d <val>   Decrease screenlight by val (in percent)
-n         Send out a notification using my notify script
-b <val>   For dwmblocks support: Force update of dwmblock entry with this val
-s         Save current screenlight
-r         Restore screenlight
-h         Displays this help script";
return;;

    esac
done

notify() {
	notify-send "Display" "$1" -h string:x-canonical-private-synchronous:backlight -i "/usr/share/icons/gnome/32x32/status/sunny.png" -u low
}
[ -z "$SAV" ] || (light -O; [ -z "$NOT" ] || notify "Saved current backlight level: $(light -G | awk -F. '{ print $1 }')")
[ -z "$REST" ] || (light -I; [ -z "$NOT" ] || notify "Restored backlight level: $(light -G | awk -F. '{ print $1 }')")
[ -z "$INC" ] || (light -A "$INC"; [ -z "$NOT" ] || notify "Increased backlight to $(light -G | awk -F. '{ print $1 }')")
[ -z "$DEC" ] || (light -U "$DEC"; [ -z "$NOT" ] || notify "Decreased backlight to $(light -G | awk -F. '{ print $1 }')")

[ -z "$BLO" ] || (pkill -SIGRTMIN+${BLO} -x dwmblocks)
