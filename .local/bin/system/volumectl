#!/bin/sh

#
# A simple script, that regulates the volume using amixer
#

INC=
DEC=
MUT=
NOT=
BLO=

while getopts i:d:mnb:h option
do
    case "${option}"
        in
        i) INC=${OPTARG};;
        d) DEC=${OPTARG};;
        m) MUT="TRUE";;
        n) NOT="TRUE";;
        b) BLO=${OPTARG};;
        *) echo "A simple script, that regulates the volume using amixer.

USAGE:
-i <val>   Increase volume by val (in percent)
-d <val>   Decrease volume by val (in percent)
-n         Send out a notification using my notify script
-b <val>   For i3blocks support: Force update of i3block entry with this val
-m         Toggle mute
-h         Displays this help script";
				return;;
    esac
done

MUTE=$(amixer get Master -M | awk '{ print $6 }' | tail -1)

notify() {
	notify-send "Sound" "$1" -h string:x-canonical-private-synchronous:volume -i "/usr/share/icons/gnome/32x32/status/audio-volume-high.png" -u low
}

if [ -z "$MUT" ]
then
    [ -z "$INC" ] || (amixer -D pulse -M sset Master "${INC}%+"; [ -z "$NOT" ] || notify "Increased volume to $(amixer get Master -M | awk -F'[' '{ print $2 }' | awk -F'%' '{ print $1 }' | tail -1)")
    [ -z "$DEC" ] || (amixer -D pulse -M sset Master "${DEC}%-"; [ -z "$NOT" ] || notify "Decreased volume to $(amixer get Master -M | awk -F'[' '{ print $2 }' | awk -F'%' '{ print $1 }' | tail -1)")
else
    if [ "$MUTE" = "[on]" ]
    then
        amixer -D pulse -M set Master toggle; [ -z "$NOT" ] || notify "Muted volume"; playerctl pause
    else
        amixer -D pulse -M set Master toggle; [ -z "$NOT" ] || notify "Unmuted volume"
    fi
fi


[ -z "$BLO" ] || (pkill -SIGRTMIN+${BLO} -x i3blocks)

